{"version":3,"sources":["Components/Dashboard/Dashboard.jsx","Components/Navigation/Navigation.jsx","Components/Sidebar/Sidebar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","Styles","styled","div","data","React","useMemo","col1","col2","columns","Header","accessor","useTable","useBlockLayout","useCssUnit","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Navigation","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","Sidebar","eventKey","disabled","App","Row","Col","sm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66e6c071.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { useTable, useBlockLayout  } from 'react-table';\r\nimport { useCssUnit } from 'react-table-css-unit';\r\n\r\nimport \"./Dashboard.css\";\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport default function Dashboard() {\r\n\r\n    const Styles = styled.div`\r\n        height: 100vh;\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        \r\n        flex-direction: column;\r\n        table {\r\n            border-spacing: 0;\r\n            border: 1px solid black;\r\n            text-align: center;\r\n            display: 'flex';\r\n            flex-direction: column;\r\n            align-items: center;\r\n            justify-content: center;\r\n            tr {\r\n                :last-child {\r\n                    td {\r\n                    border-bottom: 0;\r\n                    }\r\n                }\r\n            }\r\n            th,\r\n            td {\r\n                margin: 0;\r\n                padding: 0.5rem;\r\n                border-bottom: 1px solid black;\r\n                border-right: 1px solid black;\r\n\r\n                :last-child {\r\n                    border-right: 0;\r\n                }\r\n            }\r\n        }\r\n    `\r\n\r\n    const data = React.useMemo(\r\n        () => [\r\n          {\r\n            col1: 'Hello',\r\n            col2: 'World',\r\n          },\r\n          {\r\n            col1: 'react-table',\r\n            col2: 'rocks',\r\n          },\r\n          {\r\n            col1: 'whatever',\r\n            col2: 'you want',\r\n          },\r\n        ],\r\n        []\r\n      )\r\n      const columns = React.useMemo(\r\n        () => [\r\n          {\r\n            Header: 'Column 1',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Column 2',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Column 3',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Column 4',\r\n            accessor: 'col4',\r\n          },\r\n        ],\r\n        []\r\n      )\r\n\r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n      } = useTable({ columns, data },\r\n        useBlockLayout,\r\n        useCssUnit)\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <Styles>\r\n                <table {...getTableProps()}>\r\n                    <thead>\r\n                    {\r\n                        // Loop over the header rows\r\n                        headerGroups.map(headerGroup => (\r\n                            // Apply the header row props\r\n                            <tr\r\n                                {...headerGroup.getHeaderGroupProps()}>\r\n                                {/* // Loop over the headers in each row */}\r\n                                {\r\n                                    headerGroup.headers.map(column => {\r\n                                    // Apply the header cell props\r\n                                    return (\r\n                                        <th {...column.getHeaderProps()}>\r\n                                        {/* // Render the header */}\r\n                                        {column.render('Header')}\r\n                                        </th>\r\n                                    )\r\n                                    })\r\n                                }\r\n                    \r\n                            </tr>\r\n                        ))\r\n                    }\r\n                    </thead>\r\n                    {/* Apply the table body props */}\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {\r\n                        // Loop over the table rows\r\n                        rows.map(row => {\r\n                            // Prepare the row for display\r\n                            prepareRow(row)\r\n                            return (\r\n                            // Apply the row props\r\n                            <tr {...row.getRowProps()}>\r\n                                {// Loop over the rows cells\r\n                                row.cells.map(cell => {\r\n                                    // Apply the cell props\r\n                                    return (\r\n                                    // Render the cell contents\r\n                                    <td {...cell.getCellProps()}>\r\n                                        {cell.render('Cell')}\r\n                                    </td>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </tr>\r\n                            )\r\n                        })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </Styles>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\r\nimport '../../App.scss';\r\n\r\nexport default function Navigation() {\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Container>\r\n                <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                        <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\n// import 'react-pro-sidebar/dist/css/styles.css';\r\n// import \"../../App.scss\";\r\nimport { Nav } from 'react-bootstrap';\r\n\r\n\r\nexport default function Sidebar() {\r\n    return (\r\n        <div>\r\n            <Nav className=\"col-md-12 d-none d-md-block bg-light sidebar\"\r\n                // activeKey=\"/home\"\r\n                // onSelect={selectedKey => alert(`selected ${selectedKey}`)}\r\n            >\r\n                <div className=\"sidebar-sticky\">\r\n\r\n                </div>\r\n                <Nav.Item>\r\n                    <Nav.Link href=\"/home\">Active</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"disabled\" disabled>\r\n                        Disabled\r\n                    </Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport './App.scss';\r\nimport Dashboard from './Components/Dashboard/Dashboard';\r\nimport Navigation from './Components/Navigation/Navigation';\r\nimport Sidebar from './Components/Sidebar/Sidebar';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Container>\r\n        <Row>\r\n          <Navigation />\r\n        </Row>\r\n        <br/>\r\n        <Row>\r\n          <Col sm={2} >\r\n            <Sidebar />\r\n          </Col>\r\n          <Col sm={10} > \r\n            <Dashboard />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route\r\n// } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}